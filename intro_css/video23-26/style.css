/*
    display: flex | inline-flex || mode de positionnement Flexbox

    flex-direction: column; /*row|row-reverse|column|column-reverse || applique une orientation
    flex-wrap: wrap; /*nowrap|wrap|wrap-reverse || applique une coupure
    flex-flow: <direction> <wrap>; ||rassemble direction et wrap dans une option

    alignement des box

    justify-content: flex-start|flex-end|center|space-between|space-around|space-evenly ||repartir les elements sur l'axe principal(horizontale)
    align-items: stretch|flex-start|flex-end|center|baseline|||alignement dans le conteneur des items sur l'axe secondaire(verticale)

    items/objets

    order:<int> || plus le chiffre est petit, plus il est prioritaire, a utilise sur les flex-items
    flex-grow:<int> ||capacite de l'objet a s'aggrandir par rapport aux autres objets
    flex-shrink:<int> || influe sur le capacite de retrecissement, s'utilise de pair avec flex-grow
    flex-basis: <length> ||definit espace initial d'un item
    flex:<grow> <shrink> <basis>
    align-self: stretch|flex-start|flex-end|center|baseline || changer le comportement/alignement d'un item en particulier
*/

/* .flexbox
{
    background-color: #DDD;
    margin: auto;
    width: 100%;
}

.container
{
    background-color: rgb(227, 185, 136);
    height: 200px;
    display: flex;
    align-items: flex-start;
}

.cont-item
{
    background-color: #70b8e6;
    border: 1px solid black;
}

.order1{align-self: center;}

.order2{align-self: stretch;}

.order3{align-self: flex-end;} */

/*________________________________________________________________________________________*/

/*
    container : display
                grid-template-columns | grid-template-rows | grid-template-areas(utlises les noms d'areas, ex entete) | grid-template
                justify-content | align-content | place content || justify-items | aligm-items | place-items
                grid-column-gap | grid-row-gap | gap
                grid-auto-columns | grid-auto-rows | grid-auto-flows
                grid

    item :      grid-column | grid-row | grid-area(donne des noms d'areas ex header{grid-area:entete;})
                grid-column-start | grid-column-end | grid-row-start | grid-row-end
                justify-self | align-self | place-self
*/
.grid
{
    background-color: #DDD;
}

.conteneur
{
    border: 2px dashed rgb(199, 126, 106);
    height: 500px;
    witdh: 800px;
    display: grid;
    /* grid-template-columns: repeat(3, minmax(200px, 800px));
    grid-template-rows: 150px 150px; */
    grid-template: 150px 150px / repeat(3, minmax(200px, 800px)); /* <rows> / <columns> */
    grid-row-gap: 20px;
    grid-column-gap: 10px;
    /* gap:<row> <column>; */

}

.item
{
    border: 1px solid rgb(45, 69, 112);
    background-color: rgb(57, 109, 163);
    color: #FFF;
    font-weight: bolder;
    padding: 10px;
}

.iC
{
    justify-self: center;
}

.iE
{
    align-self: center;
}
